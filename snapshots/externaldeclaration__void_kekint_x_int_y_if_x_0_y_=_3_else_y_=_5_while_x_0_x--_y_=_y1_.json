// externaldeclaration
// 
//    void kek(int x) { 
//       int y;
//       if (x > 0) { 
//          y = 3;
//        } else {
//          y = 5;
//        };
// 
//        while (x > 0){
//          x--;
//          y = y+1;
//        }
//      }
//
//    at Object.testSnapshot (/Users/vasilii/demo_compiler/testsnapshot.ts:34:10)
//    at Object.<anonymous> (/Users/vasilii/demo_compiler/parser.funcs.test.ts:16:5)
//    at Object.asyncJestTest (/Users/vasilii/demo_compiler/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
//    at resolve (/Users/vasilii/demo_compiler/node_modules/jest-jasmine2/build/queueRunner.js:47:12)
//    at new Promise (<anonymous>)
//    at mapper (/Users/vasilii/demo_compiler/node_modules/jest-jasmine2/build/queueRunner.js:30:19)
//    at promise.then (/Users/vasilii/demo_compiler/node_modules/jest-jasmine2/build/queueRunner.js:77:41)
//    at process._tickCallback (internal/process/next_tick.js:68:7)

[
  {
    "type": "function-declaration",
    "declaration": {
      "type": "declarator",
      "functionSpecifier": null,
      "storageSpecifier": null,
      "identifier": "kek",
      "typename": {
        "type": "function",
        "const": true,
        "haveEndingEllipsis": false,
        "parameters": [
          {
            "type": "declarator",
            "functionSpecifier": null,
            "storageSpecifier": null,
            "identifier": "x",
            "typename": {
              "type": "arithmetic",
              "arithmeticType": "int",
              "const": false,
              "signedUnsigned": null
            },
            "declaratorId": "0008"
          }
        ],
        "returnType": {
          "type": "void",
          "const": false
        }
      },
      "declaratorId": "0009"
    },
    "body": [
      {
        "type": "declarator",
        "functionSpecifier": null,
        "storageSpecifier": null,
        "identifier": "y",
        "typename": {
          "type": "arithmetic",
          "arithmeticType": "int",
          "const": false,
          "signedUnsigned": null
        },
        "declaratorId": "0010"
      },
      {
        "type": "if",
        "condition": {
          "type": "binary operator",
          "operator": ">",
          "left": {
            "type": "identifier",
            "value": "x",
            "declaratorNodeId": "0008"
          },
          "right": {
            "type": "const",
            "subtype": "int",
            "value": 0
          }
        },
        "iftrue": {
          "type": "compound-statement",
          "body": [
            {
              "type": "expression",
              "expression": {
                "type": "assignment",
                "operator": "=",
                "lvalue": {
                  "type": "identifier",
                  "value": "y",
                  "declaratorNodeId": "0010"
                },
                "rvalue": {
                  "type": "const",
                  "subtype": "int",
                  "value": 3
                }
              }
            }
          ]
        },
        "iffalse": {
          "type": "compound-statement",
          "body": [
            {
              "type": "expression",
              "expression": {
                "type": "assignment",
                "operator": "=",
                "lvalue": {
                  "type": "identifier",
                  "value": "y",
                  "declaratorNodeId": "0010"
                },
                "rvalue": {
                  "type": "const",
                  "subtype": "int",
                  "value": 5
                }
              }
            }
          ]
        }
      },
      {
        "type": "noop"
      },
      {
        "type": "while",
        "condition": {
          "type": "binary operator",
          "operator": ">",
          "left": {
            "type": "identifier",
            "value": "x",
            "declaratorNodeId": "0008"
          },
          "right": {
            "type": "const",
            "subtype": "int",
            "value": 0
          }
        },
        "body": {
          "type": "compound-statement",
          "body": [
            {
              "type": "expression",
              "expression": {
                "type": "postfix --",
                "target": {
                  "type": "identifier",
                  "value": "x",
                  "declaratorNodeId": "0008"
                }
              }
            },
            {
              "type": "expression",
              "expression": {
                "type": "assignment",
                "operator": "=",
                "lvalue": {
                  "type": "identifier",
                  "value": "y",
                  "declaratorNodeId": "0010"
                },
                "rvalue": {
                  "type": "binary operator",
                  "operator": "+",
                  "left": {
                    "type": "identifier",
                    "value": "y",
                    "declaratorNodeId": "0010"
                  },
                  "right": {
                    "type": "const",
                    "subtype": "int",
                    "value": 1
                  }
                }
              }
            }
          ]
        }
      }
    ],
    "declaredVariables": [
      {
        "type": "declarator",
        "functionSpecifier": null,
        "storageSpecifier": null,
        "identifier": "x",
        "typename": {
          "type": "arithmetic",
          "arithmeticType": "int",
          "const": false,
          "signedUnsigned": null
        },
        "declaratorId": "0008"
      },
      {
        "type": "declarator",
        "functionSpecifier": null,
        "storageSpecifier": null,
        "identifier": "y",
        "typename": {
          "type": "arithmetic",
          "arithmeticType": "int",
          "const": false,
          "signedUnsigned": null
        },
        "declaratorId": "0010"
      }
    ]
  }
]